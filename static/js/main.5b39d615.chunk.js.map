{"version":3,"sources":["config.js","hash.js","Components/Reducer.js","Components/QuizQuestions.js","Components/TestQuiz.js","Components/Recommendation.js","App.js","serviceWorker.js","Components/Store.js","index.js"],"names":["scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","console","log","initialState","recommendation","getRecommendation","seed","token","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","$","url","concat","genre","instrumentalness","dancebility","valence","energy","artist","type","headers","Authorization","success","data","spotifyData","tracks","stop","_x","apply","this","arguments","recommendationReducer","state","length","undefined","action","QuizQuestions","id","question","valueOne","valueTwo","endOfQuiz","imageOne","imageTwo","DisconnectedTestQuiz","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","currentQuestion","percentage","handleSubmit","bind","assertThisInitialized","event","props","access_token","history","push","_this2","newStateOne","newStateTwo","assign","react_default","createElement","className","dist_default","text","background","backgroundPadding","styles","fill","fontSize","path","stroke","trail","src","border","value","alt","onClick","setState","React","Component","connect","DisconnectedRecommendation","handleLoadSuccess","handleLoadFailure","cb","onSpotifyWebPlaybackSDKReady","scriptLoaded","player","Spotify","Player","name","getOAuthToken","addListener","message","error","_ref2","_ref3","_ref4","_ref5","device_id","_ref6","spotify_uri","_ref6$playerInstance$","playerInstance","_options","fetch","method","body","JSON","stringify","uris","Content-Type","play","_ref7","scriptError","lib_default","onCreate","handleScriptCreate","onError","handleScriptError","onLoad","handleScriptLoad","map","track","key","href","external_urls","spotify","artists","album","App","_token","tdracks","react_router_dom","react","react_typed_default","strings","typeSpeed","join","react_router","exact","component","TestQuiz","Recommendation","Boolean","hostname","match","createStore","Reducer","composeWithDevTools","applyMiddleware","thunkMiddleware","loggingMiddleware","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b39d615.chunk.js","sourcesContent":["export const authEndpoint = 'https://accounts.spotify.com/authorize';\n\n// Replace with your app's client ID, redirect URI and desired scopes\nexport const clientId = '62b5875d21e54e2994a7af1e114b38b5';\nexport const redirectUri = 'http://localhost:3000/';\nexport const scopes = [\n  'user-top-read',\n  'user-read-currently-playing',\n  'user-read-playback-state',\n];\n","// Get the hash of the url\nconst hash = window.location.hash\n  .substring(1)\n  .split('&')\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split('=');\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = '';\nconsole.log('checking hash', hash);\nexport default hash;\n","import * as $ from 'jquery';\n\n//initial state\nconst initialState = {\n  recommendation: [],\n};\n\n//action getRecommendation\nconst GET_RECOMMENDATION = 'GET_RECOMMENDATION';\n\n//thunk\n\n// &target_valence=${seed.valence}&target_energy=${\n//   seed.energy\n// }&target_dancebility=${seed.dancebility}&target_instrumentalness=${\n//   seed.instrumentalness\n// }&target_popularity=${seed.popularity}\n\nexport const getRecommendation = (seed, token) => {\n  return async dispatch => {\n    await $.ajax({\n      url: `https://api.spotify.com/v1/recommendations?market=US&seed_genres=${\n        seed.genre\n      }&limit=10&target_instrumentalness=${\n        seed.instrumentalness\n      }&target_dancebility=${seed.dancebility}&target_valence=${\n        seed.valence\n      }&target_energy=${seed.energy}&seed_artists=${seed.artist}`,\n      type: 'GET',\n      headers: { Authorization: 'Bearer ' + token },\n      success: data => {\n        console.log('REDUX are there recommendations i?', data);\n        return dispatch({\n          type: 'GET_RECOMMENDATION',\n          spotifyData: data.tracks,\n        });\n      },\n    });\n  };\n};\n\n//reducer\nconst recommendationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_RECOMMENDATION:\n      return {\n        recommendation: action.spotifyData,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default recommendationReducer;\n","const QuizQuestions = [\n  {\n    id: 1,\n    question: \"You're feeling rather...\",\n    type: 'valence',\n    valueOne: 0.7,\n    valueTwo: 0.3,\n    endOfQuiz: false,\n    imageOne:\n      'https://cdn.dribbble.com/users/1056629/screenshots/3220439/unicorn.gif',\n    imageTwo:\n      'https://media2.giphy.com/media/8boMf1VXVHoJy/giphy.gif?cid=790b76115cc5eca3714d636f41d299e7&rid=giphy.gif',\n  },\n  {\n    id: 2,\n    question: 'Just pick one.',\n    type: 'instrumentalness',\n    valueOne: 0.7,\n    valueTwo: 0.3,\n    endOfQuiz: false,\n    imageOne: 'https://media2.giphy.com/media/1wXbeoh28PW8v9ANDN/source.gif',\n    imageTwo: 'https://i.redd.it/19agtq4u3ol11.gif',\n  },\n  {\n    id: 3,\n    question: 'Dance party or staycation?',\n    type: 'dancebility',\n    valueOne: 0.7,\n    valueTwo: 0.3,\n    endOfQuiz: false,\n    imageOne:\n      'https://cdn.dribbble.com/users/641727/screenshots/5120590/flossdance_800.gif',\n    imageTwo:\n      'https://cdn.dribbble.com/users/1466186/screenshots/5020146/homealone.gif',\n  },\n  {\n    id: 4,\n    question: 'Your spirit animal?',\n    type: 'energy',\n    valueOne: 0.7,\n    valueTwo: 0.3,\n    endOfQuiz: false,\n    imageOne:\n      'https://cdn.dribbble.com/users/428994/screenshots/4039934/party_dribbble.gif',\n    imageTwo:\n      'https://cdn.dribbble.com/users/470545/screenshots/2736749/800_x_600.gif',\n  },\n  {\n    id: 5,\n    question: 'Pick a vibe.',\n    type: 'genre',\n    valueOne: 'acoustic%2Cambient',\n    valueTwo: 'pop%2Chip_hop',\n    endOfQuiz: false,\n    imageOne:\n      'https://cdn.dribbble.com/users/92827/screenshots/2535570/intruder1.gif',\n    imageTwo:\n      'https://cdn.dribbble.com/users/1473989/screenshots/3891988/california_love_v02_001_compressed.gif',\n  },\n  {\n    id: 6,\n    question: 'Who would you hang out with?',\n    type: 'artist',\n    valueOne: '6eUKZXaKkcviH0Ku9w2n3V',\n    valueTwo: '6vWDO969PvNqNYHIOW5v0m',\n    endOfQuiz: true,\n    imageOne: 'https://media.giphy.com/media/10U2e8PTL3sc8M/giphy.gif',\n    imageTwo:\n      'http://legacy.blavity.com/wp-content/uploads/2016/03/bey-wave.gif',\n  },\n];\n\nexport default QuizQuestions;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getRecommendation } from './Reducer';\nimport hash from '../hash';\nimport QuizQuestions from './QuizQuestions';\nimport CircularProgressbar from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nclass DisconnectedTestQuiz extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      valence: null,\n      energy: null,\n      dancebility: null,\n      instrumentalness: null,\n      artist: null,\n      genre: '',\n      endOfQuiz: false,\n      spotifyData: [],\n      currentQuestion: 0,\n      percentage: 17,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    // event.preventDefault();\n    console.log('is state updated?', this.props);\n    this.props.getRecommendation(this.state, hash.access_token);\n    this.props.history.push('/recommendation');\n  }\n\n  render() {\n    // console.log('Next Question - were hitting testquiz', nextQuestion);\n    const currentQuestion = QuizQuestions[this.state.currentQuestion];\n\n    const type = currentQuestion.type;\n\n    const newStateOne = currentQuestion.endOfQuiz\n      ? { endOfQuiz: currentQuestion.endOfQuiz, percentage: 100 }\n      : {\n          endOfQuiz: currentQuestion.endOfQuiz,\n          currentQuestion: this.state.currentQuestion + 1,\n          percentage: this.state.percentage + 17,\n        };\n\n    const newStateTwo = Object.assign({}, newStateOne);\n\n    newStateOne[type] = currentQuestion.valueOne;\n    newStateTwo[type] = currentQuestion.valueTwo;\n\n    console.log('checking state', this.state);\n\n    return (\n      <div>\n        <div className=\"quiz-question-container\">\n          {currentQuestion.question}\n          {!this.state.endOfQuiz && (\n            <CircularProgressbar\n              className=\"progress-bar\"\n              percentage={this.state.percentage}\n              text={`Q ${currentQuestion.id} of 6`}\n              background\n              backgroundPadding={0}\n              styles={{\n                background: {\n                  fill: 'transparent',\n                },\n                text: {\n                  fill: '#1ecd97',\n                  fontSize: '16px',\n                },\n                path: {\n                  stroke: '#1ecd97',\n                },\n                trail: { stroke: 'transparent' },\n              }}\n            />\n          )}\n          {this.state.endOfQuiz ? (\n            <div className=\"submit-playlist\">\n              <img\n                id=\"generate-playlist\"\n                type=\"submit\"\n                src=\"https://thumbs.gfycat.com/HeftyAncientCaimanlizard-max-1mb.gif\"\n                border=\"0\"\n                value=\"generate-playlist\"\n                alt=\"submit\"\n              />\n              <p onClick={() => this.handleSubmit()}>Generate Playlist</p>\n            </div>\n          ) : null}\n        </div>\n        <div className=\"quiz-container\">\n          <img\n            src={currentQuestion.imageOne}\n            alt=\"\"\n            onClick={() => this.setState(newStateOne)}\n          />\n          <img\n            src={currentQuestion.imageTwo}\n            alt=\"\"\n            onClick={() => this.setState(newStateTwo)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getRecommendation: (seed, token) =>\n      dispatch(getRecommendation(seed, token)),\n  };\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(DisconnectedTestQuiz);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Script from 'react-async-script-loader';\nimport hash from '../hash';\n\nclass DisconnectedRecommendation extends React.Component {\n  // $.ajax({\n  //   url: \"https://api.spotify.com/v1/me/player/play?device_id=\" + device_id,\n  //   type: \"PUT\",\n  //   data: '{\"uris\": [\"spotify:track:5ya2gsaIhTkAuWYEMB0nw5\"]}',\n  //   beforeSend: function(xhr){xhr.setRequestHeader('Authorization', 'Bearer ' + _token );},\n  //   success: function(data) {\n  //     console.log(data)\n  //   }\n  //  });\n\n  constructor(props) {\n    super(props);\n    this.handleLoadSuccess = this.handleLoadSuccess.bind(this);\n    this.handleLoadFailure = this.handleLoadSuccess.bind(this);\n    this.cb = this.cb.bind(this);\n  }\n\n  componentDidMount() {\n    window.onSpotifyWebPlaybackSDKReady = () => {\n      this.handleLoadSuccess();\n    };\n  }\n  handleLoadSuccess() {\n    this.setState({ scriptLoaded: true });\n    console.log('Script loaded');\n    const token = hash.access_token;\n    const player = new window.Spotify.Player({\n      name: 'Web Playback SDK Quick Start Player',\n      getOAuthToken: cb => {\n        cb(token);\n      },\n    });\n    console.log(player);\n\n    // Error handling\n    player.addListener('initialization_error', ({ message }) => {\n      console.error(message);\n    });\n    player.addListener('authentication_error', ({ message }) => {\n      console.error(message);\n    });\n    player.addListener('account_error', ({ message }) => {\n      console.error(message);\n    });\n    player.addListener('playback_error', ({ message }) => {\n      console.error(message);\n    });\n\n    // Playback status updates\n    player.addListener('player_state_changed', state => {\n      console.log(state);\n    });\n\n    // Ready\n    player.addListener('ready', ({ device_id }) => {\n      console.log('Ready with Device ID', device_id);\n\n      const play = ({\n        spotify_uri,\n        playerInstance: {\n          _options: { getOAuthToken, id },\n        },\n      }) => {\n        getOAuthToken(access_token => {\n          fetch(`https://api.spotify.com/v1/me/player/play?device_id=${id}`, {\n            method: 'PUT',\n            body: JSON.stringify({ uris: [spotify_uri] }),\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${access_token}`,\n            },\n          });\n        });\n      };\n\n      play({\n        playerInstance: player,\n        spotify_uri: 'spotify:track:7xGfFoTpQ2E7fRF5lN10tr',\n      });\n    });\n\n    // Not Ready\n    player.addListener('not_ready', ({ device_id }) => {\n      console.log('Device ID has gone offline', device_id);\n    });\n\n    // Connect to the player!\n    player.connect();\n  }\n\n  cb(token) {\n    return token;\n  }\n\n  handleScriptCreate() {\n    this.setState({ scriptLoaded: false });\n    console.log('Script created');\n  }\n\n  handleScriptError() {\n    this.setState({ scriptError: true });\n    console.log('Script error');\n  }\n\n  handleScriptLoad() {\n    this.setState({ scriptLoaded: true });\n    console.log('Script loaded');\n  }\n\n  render() {\n    const recommendation = this.props.recommendation || [];\n\n    console.log(this.props);\n    return (\n      <div className=\"playlist\">\n        <Script\n          url=\"https://sdk.scdn.co/spotify-player.js\"\n          onCreate={this.handleScriptCreate.bind(this)}\n          onError={this.handleScriptError.bind(this)}\n          onLoad={this.handleScriptLoad.bind(this)}\n        />\n        <tbody>\n          <tr className=\"playlist-header\">\n            <td>Song</td>\n            <td>Artist</td>\n            <td>Album</td>\n          </tr>\n          {recommendation.map(track => (\n            <tr key={track.name} className=\"song-list\">\n              <td>\n                <a href={track.external_urls.spotify}>{track.name}</a>\n              </td>\n              <td>{track.artists[0].name}</td>\n              <td>{track.album.name}</td>\n            </tr>\n          ))}\n        </tbody>\n        {/* <div className=\"ending\">\n          <Typed strings={['Enjoy the playlist!']} typeSpeed={40} />\n        </div> */}\n        <a\n          id=\"login-spotify\"\n          className=\"btn btn--login\"\n          href=\"http://localhost:3000/#/\"\n        >\n          Play Again\n        </a>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    recommendation: state.recommendation,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(DisconnectedRecommendation);\n","import React, { Component, Fragment } from 'react';\nimport * as $ from 'jquery';\nimport { authEndpoint, clientId, redirectUri, scopes } from './config';\nimport hash from './hash';\nimport TestQuiz from './Components/TestQuiz';\nimport Recommendation from './Components/Recommendation';\nimport './App.css';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport Typed from 'react-typed';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      recommendation: [],\n    };\n    this.getRecommendation = this.getRecommendation.bind(this);\n  }\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token,\n      });\n    }\n  }\n\n  getRecommendation(token, seed) {\n    console.log('was getRec ever called????');\n    $.ajax({\n      url: `https://api.spotify.com/v1/recommendations?market=ES&seed_genres=${\n        seed.genre\n      }&limit=10`,\n      type: 'GET',\n      headers: { Authorization: 'Bearer ' + token },\n      success: data => {\n        console.log('are there recommendations?', data);\n        this.setState({\n          recommendation: data.tdracks,\n        });\n      },\n    });\n  }\n\n  render() {\n    console.log('checking state', this.state);\n    return (\n      <Router>\n        <body className=\"App-body\">\n          {!this.state.token ? (\n            <Fragment>\n              <div className=\"login-cover-photo\">\n                <img\n                  src=\"https://cdn.dribbble.com/users/722246/screenshots/2989548/dribbble.gif\"\n                  alt=\"\"\n                />\n              </div>\n              <div className=\"login-page-container\">\n                <div className=\"login-intro\">\n                  <Typed\n                    strings={[\n                      'Take a quiz to create your personalized playlist',\n                    ]}\n                    typeSpeed={40}\n                  />\n                </div>\n\n                <a\n                  id=\"login-spotify\"\n                  className=\"btn btn--login\"\n                  href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                    '%20'\n                  )}&response_type=token&show_dialog=true`}\n                >\n                  Login to Spotify\n                </a>\n              </div>\n            </Fragment>\n          ) : null}\n\n          {this.state.token && (\n            <Fragment>\n              <Route exact path=\"/\" component={TestQuiz} />\n              <Route exact path=\"/recommendation\" component={Recommendation} />\n            </Fragment>\n          )}\n        </body>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport Reducer from './Reducer';\nimport loggingMiddleware from 'redux-logger'; // https://github.com/evgenyrodionov/redux-logger\nimport thunkMiddleware from 'redux-thunk'; // https://github.com/gaearon/redux-thunk\n\nexport default createStore(\n  Reducer,\n  composeWithDevTools(\n    applyMiddleware(\n      // `withExtraArgument` gives us access to axios in our async action creators!\n      // https://github.com/reduxjs/redux-thunk#injecting-a-custom-argument\n      thunkMiddleware,\n      loggingMiddleware\n    )\n  )\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './Components/Store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}